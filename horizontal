class IndividualOrder extends StatefulWidget {
  @override
  _IndividualOrderState createState() => _IndividualOrderState();
}

class _IndividualOrderState extends State<IndividualOrder> {
  PageController pageController;
  List<String> number = ["100", "500", "1.000", "5.000", "10.000"];
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    pageController =
        PageController(initialPage: _currentNumber, keepPage: true, viewportFraction: 0.3);
  }

  int _currentNumber = 2;
  @override
  Widget build(BuildContext context) {
    // TODO: implement build
    return Container(
      height: 120.0,
      child: PageView.builder(
          onPageChanged: (int position) {
            setState(() {
              _currentNumber = position;
            });
          },
          scrollDirection: Axis.horizontal,
          controller: pageController,
          itemCount: number.length,
          itemBuilder: (context, index) {
            return AnimatedBuilder(
              animation: pageController,
              builder: (context, widget) {
                double value = 1;
                if (pageController.position.haveDimensions) {
                  value = pageController.page - index;
                  value = (1 - (value.abs() * 0.35)).clamp(0.0, 1.0);
                }
                return Center(
                  child: SizedBox(
                    height: Curves.easeInOut.transform(value) * 70,
                    width: Curves.easeInOut.transform(value) * 120,
                    child: widget,
                  ),
                );
              },
              child: GestureDetector(
                  onTap: () {
                    setState(() {
                      pageController.animateToPage(
                        index,
                        duration: Duration(milliseconds: 300),
                        curve: Curves.linear,
                      );
                    });
                  },
                  child: Stack(
                    children: [
                      Container(
                        margin: EdgeInsets.all(4),
                        decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(4),
                            border: Border.all(
                                width: 1,
                                color: _currentNumber == index
                                    ? Colors.blue
                                    : Colors.grey),
                            color: _currentNumber == index
                                ? Colors.grey[200]
                                : Colors.white),
                        alignment: Alignment.center,
                        child: Text(
                          number[index],
                          style: TextStyle(
                              color: _currentNumber == index
                                  ? Colors.blue[600]
                                  : Color(0xFF4B545B),
                              fontWeight: _currentNumber == index
                                  ? FontWeight.w700
                                  : FontWeight.w500,
                              fontSize: _currentNumber == index ? 24.0 : 16.0),
                        ),
                      ),
                      Positioned(
                          top: 5,
                          right: 9,
                          child: _currentNumber == index
                              ? Icon(
                            Icons.check,
                            color: Colors.green,
                            size: 18,
                          )
                              : Icon(Icons.check,
                              color: Colors.transparent, size: 18))
                    ],
                  )),
            );
          }),
    );
  }
}
